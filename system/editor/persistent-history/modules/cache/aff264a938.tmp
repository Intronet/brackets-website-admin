/*jslint node: true, vars: true, plusplus: true, devel: true, nomen: true, white: true, regexp: true, indent: 2, maxerr: 50

*/
/*global define, $, brackets, Mustache, window, console, Node, CryptoJS,  EJS, getComputedStyle, CodeMirror, $g, g, sT, ip, dev, code, unescape, prefs_, exec

*/
(function () {
   "use strict";
   var
      update = false,
      selfClose = true,
      version;

      if($g.prefs.get("tree") !== undefined  && $g.prefs.get("tree") === false){  
      $('head').append('<style>' +
                       '#ftpTree .fa-folder-o:before {' +
                       'content: "\\f0da";' +
                       'font-size:0.8em;' +
                       'margin-left:-6px;' +
                       'top:10px;' +
                       'color: #adb9bd;' +
                       '}' +
                       '.jstree-brackets li.jstree-leaf{' +
                       'margin-left: 15px;' +
                       '}' +                       
                       '</style>');         
      }  
      if($g.prefs.get("tabs") !== undefined  && $g.prefs.get("tabs") === false){  
      $('head').append('<style>' +
                       '.main-view .content {' +
                       'right: 0 !important;' +
                       '}' +                       
                       '</style>');         
      }  
   
   //	Glow extension icon
   $.fn.glow = function (options) {
      var settings = $.extend({
         // These are the defaults.
         timer: 500,
         opacity: 0.20,
         color: ['#ffffff', '#0083e8']
      }, options);

      function glow(e, o, c, t) {
         $(e).animate({
               opacity: o,
               color: c
            }, t,
            function () {
               if (o === 1) {
                  o = settings.opacity;
                  c = settings.color[1];
               } else {
                  o = 1;
                  c = settings.color[0];
               }
               glow(this, o, c, t); // Animation complete.
            });
      }
      glow(this, settings.opacity, settings.color[0], settings.timer);
   };

   $("#main-toolbar .buttons")
      .append('<a id="toolbar-brackets-wysiwyg" title="Brackets Website Admin" href="#"><i class="fa fa-html5"></i></a>');
   $("#toolbar-brackets-wysiwyg").on("click", function () {
      $('#projectInfo select')[0].selectedIndex = 1;
      $('#projectInfo select').change();
   }).glow({
      opacity: 0.7,
      color: ['#91cc41', '#769B45'],
      timer: 1000
   });

   version = parseInt(($g.EX.extensions["brackets-website-admin"].installInfo.metadata.version).replace(/\./g, ''), 10);

   if (version < 5) {
      update = true;
      selfClose = false;
   }

   $g.sD('preference-dialog', selfClose, {
      getTab: 7,
      dev: dev,
      welcome: true,
      sT: $g.sT,
      update: update,
      solo: {
         css: "welcome"
      },
      ready: function () {},
      callback: function () {
         $g.DL.cancelModalDialogIfOpen('preference-dialog');
         /*
         console.log('click the extension icon');
         */
         $('#toolbar-extension-manager').click();
         /*
         console.log("waiting for $('.extension-manager-dialog') to open");
         */
         var
            tasks = {
               extensionManager: {
                  dialog: '.extension-manager-dialog',
                  loaded: false,
                  element: 'button.update[data-extension-id="brackets-website-admin"]',
                  done: false
               },
               installExtension: {
                  dialog: '.install-extension-dialog',
                  done: false
               },
               changeMarked: {
                  dialog: '.change-marked-extensions',
                  done: false
               },
               timer: setInterval(function () {
                  if ($(tasks.extensionManager.dialog).length !== 0 && tasks.extensionManager.loaded === false) {
                     /*
                     $(tasks.extensionManager.dialog).parent().parent().hide();
                     console.log("OPENED $('.extension-manager-dialog')");
                     */
                     tasks.extensionManager.loaded = true;
                  }
                  if ($(tasks.extensionManager.element).length !== 0 && tasks.extensionManager.done === false) {
                     /*
                     console.log('done loading');
                     */
                     $(tasks.extensionManager.element).click();
                     /*
                     console.log('click update button');
                     */
                     $('.install-extension-dialog:gt(0)').each(function () {
                        $(this).parent().parent().remove();
                     });
                     tasks.extensionManager.done = true;
                     /*
                     console.log('waiting for download');
                     */
                  }
                  if ($(tasks.installExtension.dialog).length === 1 && tasks.installExtension.done === false) {
                     /*
                     $(tasks.installExtension.dialog).parent().parent().hide();
                     */
                     if ($(tasks.installExtension.dialog).find(".message:contains('This extension update')").length === 1) {
                        /*
                        console.log('downloaded');
                        */
                        $(tasks.installExtension.dialog).find('button[data-button-id="ok"]').click();
                        /*
                        console.log('close installExtension');
                        */
                        $(tasks.extensionManager.dialog).find('button[data-button-id="close"]').click();
                        /*
                        console.log('close extensionManager');
                        */
                     }
                  }
                  if ($(tasks.changeMarked.dialog).length === 1 && tasks.changeMarked.done === false) {
                     /*
                     $(tasks.changeMarked.dialog).parent().parent().hide();
                     $(tasks.changeMarked.dialog).find('button[data-button-id="ok"]').click();
                     */
                     /*
                     console.log('close changeMarked');
                     */
                     tasks.changeMarked.done = true;
                     /*
                     console.log('waiting for reload');
                     */
                     clearInterval(tasks.timer);
                  }
               }, 100)
            };
         setTimeout(function () {
            clearInterval(tasks.timer);
         }, 20000);
      }
   });
   // DEVELOPER   //
   if (dev === true) {
      /* run node child_process */
      /*var func = " " + function(){
        *console.log('@@@@@@@@@@@@@@@@@@@@@@@@@@@');
         console.warn('########################## foobar = "HELLO WORLD!"');
         exec('control mmsys.cpl sounds');
         exec('notepad');
         exec('calc');
      };    
      $g.nD.exec("runNode", {func: func}, false);*/
      
      /* reload app with Node restart */
      $("#main-toolbar .buttons")
         .prepend('<a id="toolbar-refresh" title="RELOAD" href="#"><i class="fa fa-refresh"></i></a>');
      $("#toolbar-refresh").on("click", function () {
         console.clear();
         $g.CM.get("debug.restartNode").execute();
         console.clear();
         $g.CM.get("app.reload").execute();
         console.clear();         
      });  
      /* javascriptobfuscator */
      $("#main-toolbar .buttons")
         .prepend('<a id="toolbar-javascriptobfuscator" title="javascriptobfuscator" href="#"><i class="fa fa-home"></i></a>');
      $("#toolbar-javascriptobfuscator").on("click", function () {
         $g.sD($g.iDl, false, {
           title: '<a class="fa fa-lock"></a> https://www.javascriptobfuscator.com',
           message: '<a id="javascriptobfuscatorLoader" class="spinner spin large" style="position:absolute;left:40px;top:40px;"></a><div class="modal-header" style="border-radius:0;box-sizing: border-box;border:solid #333 1px;width:100%;height:412px;padding:0;"><iframe id="javascriptobfuscator" onload="fixPage(0)" style="border:none;opacity:0;width:100%;height:100%;"  src="https://www.javascriptobfuscator.com/Javascript-Obfuscator.aspx"></iframe></div>',
           ready: function () {
               $('#dialog').css({width: '1024px'});
           }
         });
      });     
      /*show develors tools   */
      setTimeout(function () {
         brackets.app.showDeveloperTools();
      }, 0);
   }
   // DEVELOPER   //
}());

function fixPage(ac){
   'use strict';
   if(ac === 0) {
      var
         jobfuscator = $('#javascriptobfuscator').contents();
      $(jobfuscator).find('.row.margin-top-20:eq(0)').after($(jobfuscator).find('#ctl00_breadcrumbs_Button1')).remove();
      $(jobfuscator).find('textarea').css({'resize': 'none'});
      $(jobfuscator).find('.footer-v3, .content, .funny-boxes, img, .navbar-nav, .loginbar' ).hide();
      $(jobfuscator).find('.breadcrumbs').css({'padding-top':'20px'});
      $(jobfuscator).find('#ctl00_breadcrumbs_Button1').wrap('<div style="z-index:99;right:15px;top:15px;position:absolute;" />');
      $('#javascriptobfuscator').css({'opacity':'1'})[0].contentWindow.onunload = function () {
         $('#javascriptobfuscator').css({'opacity':'0'});
         $('#javascriptobfuscatorLoader').show();
      };
      $('#javascriptobfuscatorLoader').hide();
      
   } 
}